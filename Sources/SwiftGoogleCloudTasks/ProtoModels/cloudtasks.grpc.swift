//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/tasks/v2beta3/cloudtasks.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import GRPC
import NIO
import NIOHTTP1
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Tasks_V2beta3_CloudTasksServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Tasks_V2beta3_CloudTasksService {
  func listQueues(_ request: Google_Cloud_Tasks_V2beta3_ListQueuesRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ListQueuesRequest, Google_Cloud_Tasks_V2beta3_ListQueuesResponse>
  func getQueue(_ request: Google_Cloud_Tasks_V2beta3_GetQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_GetQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func createQueue(_ request: Google_Cloud_Tasks_V2beta3_CreateQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_CreateQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func updateQueue(_ request: Google_Cloud_Tasks_V2beta3_UpdateQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_UpdateQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func deleteQueue(_ request: Google_Cloud_Tasks_V2beta3_DeleteQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_DeleteQueueRequest, SwiftProtobuf.Google_Protobuf_Empty>
  func purgeQueue(_ request: Google_Cloud_Tasks_V2beta3_PurgeQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_PurgeQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func pauseQueue(_ request: Google_Cloud_Tasks_V2beta3_PauseQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_PauseQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func resumeQueue(_ request: Google_Cloud_Tasks_V2beta3_ResumeQueueRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ResumeQueueRequest, Google_Cloud_Tasks_V2beta3_Queue>
  func getIamPolicy(_ request: Google_Iam_V1_GetIamPolicyRequest, callOptions: CallOptions?) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>
  func setIamPolicy(_ request: Google_Iam_V1_SetIamPolicyRequest, callOptions: CallOptions?) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>
  func testIamPermissions(_ request: Google_Iam_V1_TestIamPermissionsRequest, callOptions: CallOptions?) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>
  func listTasks(_ request: Google_Cloud_Tasks_V2beta3_ListTasksRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ListTasksRequest, Google_Cloud_Tasks_V2beta3_ListTasksResponse>
  func getTask(_ request: Google_Cloud_Tasks_V2beta3_GetTaskRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_GetTaskRequest, Google_Cloud_Tasks_V2beta3_Task>
  func createTask(_ request: Google_Cloud_Tasks_V2beta3_CreateTaskRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_CreateTaskRequest, Google_Cloud_Tasks_V2beta3_Task>
  func deleteTask(_ request: Google_Cloud_Tasks_V2beta3_DeleteTaskRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_DeleteTaskRequest, SwiftProtobuf.Google_Protobuf_Empty>
  func runTask(_ request: Google_Cloud_Tasks_V2beta3_RunTaskRequest, callOptions: CallOptions?) -> UnaryCall<Google_Cloud_Tasks_V2beta3_RunTaskRequest, Google_Cloud_Tasks_V2beta3_Task>
}

public final class Google_Cloud_Tasks_V2beta3_CloudTasksServiceClient: GRPCClient, Google_Cloud_Tasks_V2beta3_CloudTasksService {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.tasks.v2beta3.CloudTasks service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }

  /// Asynchronous unary call to ListQueues.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListQueues.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listQueues(_ request: Google_Cloud_Tasks_V2beta3_ListQueuesRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ListQueuesRequest, Google_Cloud_Tasks_V2beta3_ListQueuesResponse> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/ListQueues",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to GetQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getQueue(_ request: Google_Cloud_Tasks_V2beta3_GetQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_GetQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/GetQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to CreateQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createQueue(_ request: Google_Cloud_Tasks_V2beta3_CreateQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_CreateQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/CreateQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to UpdateQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateQueue(_ request: Google_Cloud_Tasks_V2beta3_UpdateQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_UpdateQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/UpdateQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to DeleteQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteQueue(_ request: Google_Cloud_Tasks_V2beta3_DeleteQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_DeleteQueueRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/DeleteQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to PurgeQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to PurgeQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func purgeQueue(_ request: Google_Cloud_Tasks_V2beta3_PurgeQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_PurgeQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/PurgeQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to PauseQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to PauseQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func pauseQueue(_ request: Google_Cloud_Tasks_V2beta3_PauseQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_PauseQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/PauseQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to ResumeQueue.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResumeQueue.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func resumeQueue(_ request: Google_Cloud_Tasks_V2beta3_ResumeQueueRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ResumeQueueRequest, Google_Cloud_Tasks_V2beta3_Queue> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/ResumeQueue",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to GetIamPolicy.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(_ request: Google_Iam_V1_GetIamPolicyRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/GetIamPolicy",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to SetIamPolicy.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(_ request: Google_Iam_V1_SetIamPolicyRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/SetIamPolicy",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to TestIamPermissions.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(_ request: Google_Iam_V1_TestIamPermissionsRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/TestIamPermissions",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to ListTasks.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTasks.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTasks(_ request: Google_Cloud_Tasks_V2beta3_ListTasksRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_ListTasksRequest, Google_Cloud_Tasks_V2beta3_ListTasksResponse> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/ListTasks",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to GetTask.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTask.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTask(_ request: Google_Cloud_Tasks_V2beta3_GetTaskRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_GetTaskRequest, Google_Cloud_Tasks_V2beta3_Task> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/GetTask",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to CreateTask.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTask.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTask(_ request: Google_Cloud_Tasks_V2beta3_CreateTaskRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_CreateTaskRequest, Google_Cloud_Tasks_V2beta3_Task> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/CreateTask",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to DeleteTask.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTask.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTask(_ request: Google_Cloud_Tasks_V2beta3_DeleteTaskRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_DeleteTaskRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/DeleteTask",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Asynchronous unary call to RunTask.
  ///
  /// - Parameters:
  ///   - request: Request to send to RunTask.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func runTask(_ request: Google_Cloud_Tasks_V2beta3_RunTaskRequest, callOptions: CallOptions? = nil) -> UnaryCall<Google_Cloud_Tasks_V2beta3_RunTaskRequest, Google_Cloud_Tasks_V2beta3_Task> {
    return self.makeUnaryCall(path: "/google.cloud.tasks.v2beta3.CloudTasks/RunTask",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Tasks_V2beta3_CloudTasksProvider: CallHandlerProvider {
  func listQueues(request: Google_Cloud_Tasks_V2beta3_ListQueuesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_ListQueuesResponse>
  func getQueue(request: Google_Cloud_Tasks_V2beta3_GetQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func createQueue(request: Google_Cloud_Tasks_V2beta3_CreateQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func updateQueue(request: Google_Cloud_Tasks_V2beta3_UpdateQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func deleteQueue(request: Google_Cloud_Tasks_V2beta3_DeleteQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  func purgeQueue(request: Google_Cloud_Tasks_V2beta3_PurgeQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func pauseQueue(request: Google_Cloud_Tasks_V2beta3_PauseQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func resumeQueue(request: Google_Cloud_Tasks_V2beta3_ResumeQueueRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Queue>
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
  func listTasks(request: Google_Cloud_Tasks_V2beta3_ListTasksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_ListTasksResponse>
  func getTask(request: Google_Cloud_Tasks_V2beta3_GetTaskRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Task>
  func createTask(request: Google_Cloud_Tasks_V2beta3_CreateTaskRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Task>
  func deleteTask(request: Google_Cloud_Tasks_V2beta3_DeleteTaskRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  func runTask(request: Google_Cloud_Tasks_V2beta3_RunTaskRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Tasks_V2beta3_Task>
}

extension Google_Cloud_Tasks_V2beta3_CloudTasksProvider {
  public var serviceName: String { return "google.cloud.tasks.v2beta3.CloudTasks" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: String, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListQueues":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listQueues(request: request, context: context)
        }
      }

    case "GetQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getQueue(request: request, context: context)
        }
      }

    case "CreateQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createQueue(request: request, context: context)
        }
      }

    case "UpdateQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateQueue(request: request, context: context)
        }
      }

    case "DeleteQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteQueue(request: request, context: context)
        }
      }

    case "PurgeQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.purgeQueue(request: request, context: context)
        }
      }

    case "PauseQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.pauseQueue(request: request, context: context)
        }
      }

    case "ResumeQueue":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.resumeQueue(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    case "ListTasks":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTasks(request: request, context: context)
        }
      }

    case "GetTask":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTask(request: request, context: context)
        }
      }

    case "CreateTask":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTask(request: request, context: context)
        }
      }

    case "DeleteTask":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTask(request: request, context: context)
        }
      }

    case "RunTask":
      return UnaryCallHandler(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.runTask(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}


/// Provides conformance to `GRPCPayload` for the request and response messages
extension Google_Cloud_Tasks_V2beta3_ListQueuesRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_ListQueuesResponse: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_GetQueueRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_Queue: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_CreateQueueRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_UpdateQueueRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_DeleteQueueRequest: GRPCProtobufPayload {}
extension SwiftProtobuf.Google_Protobuf_Empty: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_PurgeQueueRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_PauseQueueRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_ResumeQueueRequest: GRPCProtobufPayload {}
extension Google_Iam_V1_GetIamPolicyRequest: GRPCProtobufPayload {}
extension Google_Iam_V1_Policy: GRPCProtobufPayload {}
extension Google_Iam_V1_SetIamPolicyRequest: GRPCProtobufPayload {}
extension Google_Iam_V1_TestIamPermissionsRequest: GRPCProtobufPayload {}
extension Google_Iam_V1_TestIamPermissionsResponse: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_ListTasksRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_ListTasksResponse: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_GetTaskRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_Task: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_CreateTaskRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_DeleteTaskRequest: GRPCProtobufPayload {}
extension Google_Cloud_Tasks_V2beta3_RunTaskRequest: GRPCProtobufPayload {}

